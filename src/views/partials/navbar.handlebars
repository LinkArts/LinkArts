<nav class="navbar">
  <div class="navbar-content">
    <div class="logo">
      <a href="/"><img src="/img/logo2.png" alt="Logo" class="logo"></a>
    </div>

    <form action="/pesquisar" class="search-bar" method="GET">
          <input type="text" id="search-input" name="search" placeholder="Pesquise aqui">
          <button type="submit" class="search-button" style="margin-right: 20px;">
            Filtrar
          </button>
        <button type="submit" class="search-button">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <circle cx="11" cy="11" r="8"></circle>
              <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
            </svg>
          </button></form>

    <div class="nav-icons">
      <div class="nav-icon" id="heart-icon">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
        </svg>
        <div class="popup" id="heart-popup">
          <div class="popup-header">
            <h3 class="popup-title">Favoritos</h3>
          </div>
          <div class="popup-content" id="navbar-favorites-content">
            <!-- Conteúdo será carregado dinamicamente via JavaScript -->
            <div class="popup-item">
              <div class="popup-item-content">
                <p style="text-align: center; color: #666; padding: 1rem;">Carregando favoritos...</p>
              </div>
            </div>
          </div>
          <div class="popup-footer">
            <button class="popup-button" onclick="window.location.href='/favoritos/{{session.userid}}'">Ver todos</button>
          </div>
        </div>
      </div>
      <div class="nav-icon" id="message-icon">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
        </svg>
        <div class="popup" id="message-popup">
          <div class="popup-header">
            <h3 class="popup-title">Mensagens Recentes</h3>
          </div>
          <div class="popup-content" id="navbar-messages-content">
            <!-- Conteúdo será carregado dinamicamente via JavaScript -->
            <div class="popup-item">
              <div class="popup-item-content">
                <p style="text-align: center; color: #666; padding: 1rem;">Carregando mensagens...</p>
              </div>
            </div>
          </div>
          <div class="popup-footer">
            <button class="popup-button" onclick="window.location.href='/chat/{{session.userid}}'">Ver todas as conversas</button>
          </div>
        </div>
      </div>
      <div class="nav-icon" id="bell-icon">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9" />
        </svg>
        <div class="popup" id="bell-popup">
          <div class="popup-header">
            <h3 class="popup-title">Notificações</h3>
          </div>
          <div class="popup-content">
            <div class="popup-notification">
              <h4 class="popup-notification-title">Nova mensagem</h4>
              <p class="popup-notification-description">Você recebeu uma nova mensagem de João.</p>
            </div>
            <div class="popup-notification">
              <h4 class="popup-notification-title">Evento próximo</h4>
              <p class="popup-notification-description">Festival Eletrônico acontecerá amanhã!</p>
            </div>
          </div>
        </div>
      </div>
      <div class="nav-icon" id="user-icon">
        {{#if currentUser}}
          {{#if currentUser.imageUrl}}
            <div class="user-profile-photo">
              <img src="{{currentUser.imageUrl}}" alt="{{currentUser.name}}" />
            </div>
          {{else}}
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
            </svg>
          {{/if}}
        {{else}}
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
          </svg>
        {{/if}}
        <div class="popup" id="user-popup">
          <div class="popup-content">
            {{#if currentUser.email}}
            <div class="popup-user-info" data-no-click="true" style="cursor: default !important;">
              <span class="popup-user-email" data-no-click="true" style="cursor: default !important;">{{currentUser.email}}</span>
            </div>
            <div class="popup-divider"></div>
            {{/if}}
            <a href="/profile/{{session.userid}}"><button class="popup-menu-item">Perfil</button></a>
            <a href="/agenda/{{session.userid}}"><button class="popup-menu-item">Agenda</button></a>
            <div class="popup-divider"></div>
            <a href="/logout"><button class="popup-menu-item danger">Logout</button></a>
          </div>
        </div>
      </div>
    </div>
  </div>
</nav>

<script>
  function setupPopups()
  {
    const icons = ['heart', 'message', 'bell', 'user'];

    icons.forEach(icon =>
    {
      const iconElement = document.getElementById(`${ icon }-icon`);
      const popupElement = document.getElementById(`${ icon }-popup`);

      iconElement.addEventListener('click', (e) =>
      {
        e.stopPropagation();

        icons.forEach(otherIcon =>
        {
          if (otherIcon !== icon)
          {
            const otherPopup = document.getElementById(`${ otherIcon }-popup`);
            if (otherPopup) otherPopup.classList.remove('active');
          }
        });

        popupElement.classList.toggle('active');
        
        if (icon === 'message' && popupElement.classList.contains('active')) {
          loadNavbarMessages();
        }
      });
    });

    document.addEventListener('click', (e) =>
    {
      if (!e.target.closest('.popup') && !e.target.closest('.nav-icon'))
      {
        icons.forEach(icon =>
        {
          const popup = document.getElementById(`${ icon }-popup`);
          if (popup) popup.classList.remove('active');
        });
      }
    });
  }

  async function loadNavbarMessages() {
    const messagesContent = document.getElementById('navbar-messages-content');
    
    try {
      messagesContent.innerHTML = `
        <div class="popup-item">
          <div class="popup-item-content">
            <p style="text-align: center; color: #666; padding: 1rem;">Carregando mensagens...</p>
          </div>
        </div>
      `;

      const response = await fetch('/api/chats/navbar');
      if (!response.ok) {
        throw new Error('Erro ao carregar mensagens');
      }

      const chats = await response.json();
      
      if (chats.length === 0) {
        messagesContent.innerHTML = `
          <div class="popup-item">
            <div class="popup-item-content">
              <p style="text-align: center; color: #666; padding: 1rem;">Nenhuma conversa encontrada</p>
            </div>
          </div>
        `;
        return;
      }

      let html = '';
      chats.forEach(chat => {
        const timeAgo = chat.latestMessage.createdAt ? formatTimeAgo(new Date(chat.latestMessage.createdAt)) : '';
        
        html += `
          <div class="popup-item" style="cursor: pointer;" onclick="openChat(${chat.chatId})">
            <div class="popup-item-image">
              <img src="/img/default.jpg" alt="${chat.otherUser.name}">
            </div>
            <div class="popup-item-content">
              <h4 class="popup-item-title">${chat.otherUser.name}</h4>
              <p class="popup-item-description">${chat.latestMessage.content}</p>
              ${timeAgo ? `<p class="popup-item-time" style="font-size: 0.7rem; color: #999; margin-top: 2px;">${timeAgo}</p>` : ''}
            </div>
          </div>
        `;
      });

      messagesContent.innerHTML = html;

    } catch (error) {
      console.error('Erro ao carregar mensagens da navbar:', error);
      messagesContent.innerHTML = `
        <div class="popup-item">
          <div class="popup-item-content">
            <p style="text-align: center; color: #e53e3e; padding: 1rem;">Erro ao carregar mensagens</p>
          </div>
        </div>
      `;
    }
  }

  function formatTimeAgo(date) {
    const now = new Date();
    const diffMs = now - date;
    const diffMinutes = Math.floor(diffMs / (1000 * 60));
    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));
    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));

    if (diffMinutes < 1) return 'agora';
    if (diffMinutes < 60) return `${diffMinutes}min`;
    if (diffHours < 24) return `${diffHours}h`;
    if (diffDays < 7) return `${diffDays}d`;
    
    return date.toLocaleDateString('pt-BR', { day: '2-digit', month: '2-digit' });
  }

  function openChat(chatId) {
    document.getElementById('message-popup').classList.remove('active');
    window.location.href = `/chat/{{session.userid}}#chat-${chatId}`;
  }

  async function loadNavbarFavorites() {
    const favoritesContent = document.getElementById('navbar-favorites-content');
    
    try {
      favoritesContent.innerHTML = `
        <div class="popup-item">
          <div class="popup-item-content">
            <p style="text-align: center; color: #666; padding: 1rem;">Carregando favoritos...</p>
          </div>
        </div>
      `;

      const response = await fetch('/profile/procurar-favoritos');
      if (!response.ok) {
        throw new Error('Erro ao carregar favoritos');
      }

      const favorites = await response.json();
      
      if (favorites.length === 0) {
        favoritesContent.innerHTML = `
          <div class="popup-item">
            <div class="popup-item-content">
              <p style="text-align: center; color: #666; padding: 1rem;">Nenhum favorito encontrado</p>
            </div>
          </div>
        `;
        return;
      }

      let html = '';
      favorites.favorites.forEach(favorite => {
        html += `
          <a href="/profile/${favorite.id}" class="popup-item" style="cursor: pointer;">
            <div class="popup-item-image">
              <img src="${favorite.profilePicture || '/img/default.jpg'}" alt="${favorite.name}">
            </div>
            <div class="popup-item-content">
              <h4 class="popup-item-title">${favorite.name}</h4>
              <p class="popup-item-description">${favorite.description || 'Sem descrição disponível'}</p>
            </div>
          </a>
        `;
      });

      favoritesContent.innerHTML = html;

    } catch (error) {
      console.error('Erro ao carregar favoritos da navbar:', error);
      favoritesContent.innerHTML = `
        <div class="popup-item">
          <div class="popup-item-content">
            <p style="text-align: center; color: #e53e3e; padding: 1rem;">Erro ao carregar favoritos</p>
          </div>
        </div>
      `;
    }
  }

  document.addEventListener('DOMContentLoaded', () =>
  {
    setupPopups();
  });

  document.addEventListener('DOMContentLoaded', () => {
    const heartIcon = document.getElementById('heart-icon');
    const heartPopup = document.getElementById('heart-popup');

    heartIcon.addEventListener('click', () => {
      if (heartPopup.classList.contains('active')) {
        loadNavbarFavorites();
      }
    });
  });

  // Função para atualizar a foto de perfil na navbar
  function updateNavbarProfilePhoto(newImageUrl) {
    const userIcon = document.getElementById('user-icon');
    const existingPhoto = userIcon.querySelector('.user-profile-photo img');
    
    if (existingPhoto) {
      existingPhoto.src = newImageUrl;
    } else {
      // Se não existe foto, criar o elemento
      const svg = userIcon.querySelector('svg');
      if (svg) {
        const photoDiv = document.createElement('div');
        photoDiv.className = 'user-profile-photo';
        const img = document.createElement('img');
        img.src = newImageUrl;
        img.alt = 'Foto do usuário';
        photoDiv.appendChild(img);
        
        userIcon.insertBefore(photoDiv, svg);
        svg.style.display = 'none';
      }
    }
  }

  // Tornar a função global para uso em outras partes da aplicação
  window.updateNavbarProfilePhoto = updateNavbarProfilePhoto;

  // Forçar cursor default na área do email
  document.addEventListener('DOMContentLoaded', () => {
    const userInfo = document.querySelector('.popup-user-info[data-no-click]');
    const userEmail = document.querySelector('.popup-user-email[data-no-click]');
    
    if (userInfo) {
      userInfo.style.cursor = 'default';
      userInfo.addEventListener('mouseenter', () => {
        userInfo.style.cursor = 'default';
      });
    }
    
    if (userEmail) {
      userEmail.style.cursor = 'default';
      userEmail.addEventListener('mouseenter', () => {
        userEmail.style.cursor = 'default';
      });
    }
  });
</script>
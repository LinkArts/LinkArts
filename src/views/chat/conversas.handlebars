<style type="text/css">
        body {
            margin-top: 20px;
        }

        .chat-online {
            color: #34ce57
        }

        .chat-offline {
            color: #e4606d
        }

        .chat-messages {
            display: flex;
            flex-direction: column;
            max-height: 800px;
            overflow-y: scroll
        }

        .chat-message-left,
        .chat-message-right {
            display: flex;
            flex-shrink: 0
        }

        .chat-message-left {
            margin-right: auto
        }

        .chat-message-right {
            flex-direction: row-reverse;
            margin-left: auto
        }

        .py-3 {
            padding-top: 1rem !important;
            padding-bottom: 1rem !important;
        }

        .px-4 {
            padding-right: 1.5rem !important;
            padding-left: 1.5rem !important;
        }

        .flex-grow-0 {
            flex-grow: 0 !important;
        }

        .border-top {
            border-top: 1px solid #dee2e6 !important;
        }
    </style>

     <div class="content bg-light">
        <a href="/thoughts/dashboard/{{user.id}}">voltar</a>
        <div class="container-fluid">
            <h1 class="h3 p-3 mb-3">Conversas</h1>
            <div class="card">
                <div class="row g-0">
                    <div class="col-12 col-lg-5 col-xl-3 border-right">
                        <div class="px-4 d-none d-md-block">
                            <div class="d-flex align-items-center">
                                <div class="flex-grow-1">
                                    <input type="text" class="form-control my-3" placeholder="Pesquisar conversa...">
                                </div>
                            </div>
                        </div>
                        {{#each favoritos}}
                        <a href="#" class="list-group-item list-group-item-action border-0">
                            <div class="badge bg-success float-right">5</div>
                            <div class="d-flex align-items-start">
                                <img src="{{this.user.img}}"
                                    class="rounded-circle mr-1" alt="Imagem do usuário" width="40" height="40">
                                <div class="flex-grow-1 ml-3">
                                    {{this.user.name}}
                                    <div class="small"><span class="fas fa-circle chat-online"></span> Online</div>
                                </div>
                            </div>
                        </a>
                        {{/each}}
                        <hr class="d-block d-lg-none mt-1 mb-0">
                    </div>
                    <div class="col-12 col-lg-7 col-xl-9">
                        <div class="py-2 px-4 border-bottom d-none d-lg-block">
                            <div class="d-flex align-items-center py-1">
                                <div class="position-relative">
                                    <a href="/thoughts/profile/{{user.id}}/{{user.id}}"> <img src="{{user.img}}" alt="" 
                                        style="width: 70px; height: auto; margin-left: 15px;"></a>
                                </div>
                                <div class="flex-grow-1 pl-3" style="margin-left: 3em;">
                                    <strong>{{user.name}}</strong>
                                    <div class="text-muted small"><em>Digitando...</em></div>
                                </div>
                                <div>
                                    <a href="/thoughts/profile/{{amigo.user.id}}/{{user.id}}">
                                        <button class="btn btn-light border btn-lg mr-1 px-3"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-calendar3" viewBox="0 0 16 16">
  <path d="M14 0H2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2M1 3.857C1 3.384 1.448 3 2 3h12c.552 0 1 .384 1 .857v10.286c0 .473-.448.857-1 .857H2c-.552 0-1-.384-1-.857z"/>
  <path d="M6.5 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2"/>
</svg>
                                        </button>
                                    </a>
                                    <a class="btn btn-light border btn-lg mr-1 px-3 d-none d-md-inline-block" href="/thoughts/favoritar/{{user.id}}/{{amigo.user.id}}"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-suit-heart" viewBox="0 0 16 16">
  <path d="m8 6.236-.894-1.789c-.222-.443-.607-1.08-1.152-1.595C5.418 2.345 4.776 2 4 2 2.324 2 1 3.326 1 4.92c0 1.211.554 2.066 1.868 3.37.337.334.721.695 1.146 1.093C5.122 10.423 6.5 11.717 8 13.447c1.5-1.73 2.878-3.024 3.986-4.064.425-.398.81-.76 1.146-1.093C14.446 6.986 15 6.131 15 4.92 15 3.326 13.676 2 12 2c-.777 0-1.418.345-1.954.852-.545.515-.93 1.152-1.152 1.595zm.392 8.292a.513.513 0 0 1-.784 0c-1.601-1.902-3.05-3.262-4.243-4.381C1.3 8.208 0 6.989 0 4.92 0 2.755 1.79 1 4 1c1.6 0 2.719 1.05 3.404 2.008.26.365.458.716.596.992a7.6 7.6 0 0 1 .596-.992C9.281 2.049 10.4 1 12 1c2.21 0 4 1.755 4 3.92 0 2.069-1.3 3.288-3.365 5.227-1.193 1.12-2.642 2.48-4.243 4.38z"/>
</svg>
                                    </a>
                                    <button class="btn btn-light border btn-lg px-3"><svg
                                            xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                            viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                            stroke-linecap="round" stroke-linejoin="round"
                                            class="feather feather-more-horizontal feather-lg">
                                            <circle cx="12" cy="12" r="1"></circle>
                                            <circle cx="19" cy="12" r="1"></circle>
                                            <circle cx="5" cy="12" r="1"></circle>
                                        </svg></button>
                                </div>
                            </div>
                        </div>
                        <div class="position-relative">
                            <div class="chat-messages p-4">
                                {{#each messages}}
                                {{#if this.self}}
                                <div class="chat-message-left pb-4">
                                {{else}}
                                <div class="chat-message-right pb-4">
                                {{/if}}
                                    <div>
                                        <a href=""><img src="{{this.user.img}}" alt="Imagem do usuário" class=""
                style="width: 50px; height: auto; border-radius: 50%;"></a>
                                        <div class="text-muted small text-nowrap mt-2">{{this.data}} - {{this.hora}} 
                                            {{#if this.visto}}
                                                <svg xmlns="http://www.w3.org/2000/svg" style="margin-left: 1em;"  width="16" height="16" fill="blue" class="bi bi-eye-fill" viewBox="0 0 16 16">
  <path d="M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0"/>
  <path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8m8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7"/>
</svg>                                      {{else}}
                                                <svg xmlns="http://www.w3.org/2000/svg" style="margin-left: 1em;"  width="16" height="16" fill="grey" class="bi bi-eye-fill" viewBox="0 0 16 16">
  <path d="M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0"/>
  <path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8m8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7"/>
</svg>
                                            {{/if}}
</div>
                                    </div>
                                    <div class="flex-shrink-1 bg-light rounded py-2 px-3 mr-3">
                                        {{#if this.self}}
                                        <div class="font-weight-bold mb-1"><i><small>Você</small></i></div>
                                        {{else}}
                                        <div class="font-weight-bold mb-1">{{this.user.name}}</div>
                                        {{/if}}
                                        {{this.conteudo}}
                                    </div>
                                </div>
                                {{/each}}
                                     
                                </div>
                            </div>
                        </div>
                        <div class="flex-grow-0 py-3 px-4 border-top">
                            <div class="input-group">
                                <input type="text" id="conteudo" class="form-control" placeholder="Escreva sua mensagem">
                                <button id="enviarBtn" class="btn btn-primary ">Enviar</button>
                            </div>
                            <p style="display: none;" id="remetenteId">{{user.id}}</p>
                            <p style="display: none;" id="destinatarioId">{{amigo.detido}}</p>
                            <p style="display: none;" id="remetenteImg">{{user.img}}</p>
                            <p style="display: none;" id="destinatarioImg">{{amigo.user.img}}</p>
                            <p style="display: none;" id="destinatarioNome">{{amigo.user.name}}</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="/js/socket.js"></script>
    <script>
        const socket = io();

        // Ouve por novas mensagens do servidor
        socket.on('nova_mensagem', (mensagem) => {
            alert("Você recebeu uma nova mensagem de " + mensagem.remetente);
            atualizarChat(mensagem.conteudo, mensagem.data,mensagem.hora,mensagem.remetente);
        });

        // Função para enviar a mensagem usando o WebSocket
        function enviarMensagem(conteudo, remetenteId, destinatarioId) {
            
            socket.emit('enviar_mensagem', { conteudo, remetenteId, destinatarioId });
             const now = new Date();
            const hours = now.getHours().toString().padStart(2, '0'); // Horas no formato 00-23
            const minutes = now.getMinutes().toString().padStart(2, '0'); // Minutos no formato 00-59
            const seconds = now.getSeconds().toString().padStart(2, '0'); // Segundos no formato 00-59

            const currentTime = `${hours}:${minutes}:${seconds}`;
            // Salva a mensagem no banco de dados
            const dia = String(now.getDate()).padStart(2, '0');
            const mes = String(now.getMonth() + 1).padStart(2, '0'); // Mês começa em 0
            const ano = now.getFullYear();
            let dataFormatada = `${dia}/${mes}/${ano}`;
            atualizarChat(conteudo,dataFormatada,currentTime,remetenteId)
        }

        function atualizarChat(conteudo, data, hora, id){

            const remetenteId = document.getElementById('remetenteId').textContent;
            const remetenteImg = document.getElementById('remetenteImg').textContent;
            const destinatarioImg = document.getElementById('destinatarioImg').textContent;
            const destinatarioNome = document.getElementById('destinatarioNome').textContent;
            console.log(destinatarioNome)
            const chatMessagesContainer = document.querySelector(".chat-messages");
            const messageElement = document.createElement("div");
            if(remetenteId != id){

                messageElement.classList.add("chat-message-right", "pb-4");
                messageElement.innerHTML = `
                <div>
                    <img src="${destinatarioImg}" alt="imagem do usuário" class="img-fluid mt-2 pt-3" style="width: auto; height: 60px; border-radius: 24px; margin-left: 15px;">
                    <div class="text-muted small text-nowrap mt-2">${data} - ${hora} <br><svg xmlns="http://www.w3.org/2000/svg" style="margin-left: 1em;"  width="16" height="16" fill="blue" class="bi bi-eye-fill" viewBox="0 0 16 16">
  <path d="M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0"/>
  <path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8m8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7"/>
</svg></div>
                </div>
                <div class="flex-shrink-1 bg-light rounded py-2 px-3 mr-3">
                    <div class="font-weight-bold mb-1">${destinatarioNome}</div>
                    ${conteudo}
                </div>
            `;
            }
            else{
                messageElement.classList.add("chat-message-left", "pb-4");
                messageElement.innerHTML = `
                <div>
                    <img src="${remetenteImg}" alt="imagem do usuário" style="width: auto; height: 50px; border-radius: 50%;">
                    <div class="text-muted small text-nowrap mt-2">${data} - ${hora} <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="grey" class="bi bi-eye-fill" viewBox="0 0 16 16">
  <path d="M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0"/>
  <path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8m8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7"/>
</svg></div>
                </div>
                <div class="flex-shrink-1 bg-light rounded py-2 px-3 mr-3">
                    <div class="font-weight-bold mb-1">Você</div>
                    ${conteudo}
                </div>
            `;
            }
            
            chatMessagesContainer.appendChild(messageElement)
            // Limpar o campo de entrada
            document.getElementById("conteudo").value = "";
            chatMessagesContainer.scrollTop = chatMessagesContainer.scrollHeight;
        }
        // Event listener para o botão de enviar
        document.getElementById('enviarBtn').addEventListener('click', () => {
            const conteudo = document.getElementById('conteudo').value;
            const remetenteId = document.getElementById('remetenteId').textContent;
            const destinatarioId = document.getElementById('destinatarioId').textContent;

            if (conteudo.trim()) {
                // Chama a função enviarMensagem para enviar via WebSocket
                enviarMensagem(conteudo, remetenteId, destinatarioId);
                document.getElementById('conteudo').value = '';  // Limpa o campo após enviar
            } else {
                alert("Digite uma mensagem antes de enviar.");
            }
        });

        
    </script>

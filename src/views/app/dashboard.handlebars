<main class="main-content">
    <section class="left-section">
        <h1><strong><em>Novidades</em></strong> para você</h1>
        <div id="perfil-container" class="perfil-container">
            {{#each info}}
            <div class="perfil-card" style="background-color:bisque; margin-bottom: 15px">
                <h3 style="margin-bottom: 15px;">{{this.name}}</h3>
                <div class="estrelas-placeholder"></div>
                <p>{{this.cpf}}</p>
            </div>
            {{/each}}
        </div>
    </section>

    <section class="right-section">
        <div class="card-agenda">
            <h2><span class="agenda-title">Agenda</span><br>Próximos eventos</h2>
            <div class="eventos-container" id="eventos-container">
                <!-- Os cards serão inseridos aqui via JavaScript -->
            </div>
        </div>
    </section>
    <div class="popup" id="popup-perfil">
        <button onclick="window.location.href='perfil.html'">Ver Perfil</button>
        <button onclick="window.location.href='configuracoes.html'">Configurações</button>
        <button onclick="logout()">Logout</button>
    </div>

    <div class="popup" id="popup-favoritos">
        <p>Você ainda não favoritou nada.</p>
        <button onclick="window.location.href='favoritos.html'">Ver todos</button>
    </div>

    <div class="popup" id="popup-notificacoes">
        <p>Sem novas notificações.</p>
        <button onclick="window.location.href='notificacoes.html'">Ver todas</button>
    </div>
</main>

<script>
    document.addEventListener("DOMContentLoaded", () =>
    {
        const bellIcon = document.querySelector('.icon-bar .bell-icon');
        const userIcon = document.querySelector('.icon-bar .perfil-icon');
        const favIcon = document.querySelector('.icon-bar .heart-icon');

        const popupPerfil = document.getElementById('popup-perfil');
        const popupFavoritos = document.getElementById('popup-favoritos');
        const popupNotificacoes = document.getElementById('popup-notificacoes');

        // Função para calcular a posição do popup
        function positionPopup(popup, button)
        {
            const rect = button.getBoundingClientRect();
            const popupWidth = 200; // Largura aproximada do popup

            // Posicionamento padrão (centralizado abaixo do ícone)
            let leftPosition = rect.left + window.scrollX;

            // Ajustes específicos para cada popup
            if (popup.id === "popup-perfil")
            {
                leftPosition -= popupWidth - rect.width; // Alinha à direita
            } else if (popup.id === "popup-notificacoes")
            {
                leftPosition -= popupWidth / 2 - rect.width / 2 + 20; // Move 20px para a esquerda
            } else if (popup.id === "popup-favoritos")
            {
                leftPosition -= popupWidth / 2 - rect.width / 2;
            }

            popup.style.top = `${ rect.bottom + window.scrollY + 5 }px`;
            popup.style.left = `${ leftPosition }px`;
            popup.style.display = 'block';
        }


        // Clique nas notificações
        if (bellIcon)
        {
            bellIcon.addEventListener('click', (e) =>
            {
                e.stopPropagation();
                closeAllPopups();
                popupNotificacoes.style.display = 'block';
                positionPopup(popupNotificacoes, bellIcon); // Ajusta a posição do popup de notificações
            });
        }

        // Clique no perfil
        if (userIcon)
        {
            userIcon.addEventListener('click', (e) =>
            {
                e.stopPropagation();
                closeAllPopups();
                popupPerfil.style.display = 'block';
                positionPopup(popupPerfil, userIcon); // Ajusta a posição do popup de perfil
            });
        }

        // Clique nos favoritos
        if (favIcon)
        {
            favIcon.addEventListener('click', (e) =>
            {
                e.stopPropagation();
                closeAllPopups();
                popupFavoritos.style.display = 'block';
                positionPopup(popupFavoritos, favIcon);
            });
        }

        // Fechar os popups ao clicar fora
        document.addEventListener('click', () =>
        {
            closeAllPopups();
        });

        // Evitar que o clique dentro do popup feche ele
        document.querySelectorAll('.popup').forEach(p =>
        {
            p.addEventListener('click', e => e.stopPropagation());
        });

        const perfis = [
            { nome: 'DJ Ana', tag: 'Artista', avaliacao: 4.2, descricao: 'Especialista em música eletrônica.', cor: '#f0f8ff' },
            { nome: 'Bar do Zé', tag: 'Estabelecimento', avaliacao: 3.7, descricao: 'Melhor point de samba da cidade.', cor: '#fff0f5' },
            { nome: 'MC Leo', tag: 'Artista', avaliacao: 4.8, descricao: 'Referência no funk consciente.', cor: '#f5fffa' },
            { nome: 'Casa do Rock', tag: 'Estabelecimento', avaliacao: 2.3, descricao: 'Shows ao vivo toda semana.', cor: '#e6e6fa' },
            { nome: 'Banda Nova', tag: 'Artista', avaliacao: 1.5, descricao: 'Novos talentos da música.', cor: '#fff8e1' }
        ];

        const container = document.getElementById('perfil-container');

        perfis.forEach(perfil =>
        {
            const card = document.createElement('div');
            card.classList.add('perfil-card');
            card.style.backgroundColor = perfil.cor;

            card.innerHTML = `
            <h3>${ perfil.nome } (${ perfil.tag })</h3>
            ${ criarEstrelas(perfil.avaliacao).outerHTML }
            <p>${ perfil.descricao }</p>
        `;

            container.appendChild(card);
        });
    });

    function closeAllPopups()
    {
        document.querySelectorAll('.popup').forEach(popup => popup.style.display = 'none');
    }

    function logout()
    {
        window.location.href = "/logout"; // ou outra rota
    }

    function criarEstrelas(avaliacao)
    {
        const container = document.createElement('div');
        container.className = 'avaliacao-container';

        const starsContainer = document.createElement('div');
        starsContainer.className = 'estrelas-container';

        // Arredondamento mais preciso
        const valorAjustado = Math.round(avaliacao * 2) / 2; // Arredonda para 0.5
        const cheias = Math.floor(valorAjustado);
        const temMeia = valorAjustado % 1 !== 0;

        // Estrelas cheias
        for (let i = 0; i < cheias; i++)
        {
            starsContainer.innerHTML += `
            <svg class="estrela" width="20" height="20" viewBox="0 0 24 24">
                <path fill="#FFD700" d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"/>
            </svg>`;
        }

        // Meia estrela
        if (temMeia)
        {
            starsContainer.innerHTML += `
            <svg class="meia-estrela" width="20" height="20" viewBox="0 0 24 24">
                <defs>
                    <linearGradient id="grad${ avaliacao }" x1="0%" y1="0%" x2="100%" y2="0%">
                        <stop offset="50%" stop-color="#FFD700"/>
                        <stop offset="50%" stop-color="#e0e0e0" stop-opacity="0.5"/>
                    </linearGradient>
                </defs>
                <path fill="url(#grad${ avaliacao })" d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"/>
            </svg>`;
        }

        // Estrelas vazias
        const total = 5 - cheias - (temMeia ? 1 : 0);
        for (let i = 0; i < total; i++)
        {
            starsContainer.innerHTML += `
            <svg class="estrela-vazia" width="20" height="20" viewBox="0 0 24 24">
                <path fill="#e0e0e0" d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"/>
            </svg>`;
        }

        // Número da avaliação
        const numero = document.createElement('span');
        numero.className = 'nota-numero';
        numero.textContent = avaliacao.toFixed(1);

        container.appendChild(starsContainer);
        container.appendChild(numero);

        return container;
    }

    const eventos = [
        {
            nome: "Festival Eletrônico",
            descricao: "Maior festival de música eletrônica da região com DJs internacionais.",
            data: "15/10/2023",
            horario: "22:00 - 05:00"
        },
        {
            nome: "Noite do Samba",
            descricao: "Roda de samba com artistas locais e comida típica.",
            data: "20/10/2023",
            horario: "19:00 - 23:00"
        },
        {
            nome: "Workshop Musical",
            descricao: "Aula aberta de produção musical para iniciantes.",
            data: "25/10/2023",
            horario: "14:00 - 17:00"
        }
    ];

    const eventosContainer = document.getElementById('eventos-container');

    eventos.forEach(evento =>
    {
        const card = document.createElement('div');
        card.className = 'evento-card';

        card.innerHTML = `
        <div class="evento-header">
            <span class="evento-nome">${ evento.nome }</span>
            <span class="evento-data">${ evento.data }</span>
        </div>
        <div class="evento-horario">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#5c46aa">
                <path d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm.5-13H11v6l5.2 3.2.8-1.3-4.5-2.7V7z"/>
            </svg>
            ${ evento.horario }
        </div>
        <p class="evento-descricao">${ evento.descricao }</p>
    `;

        eventosContainer.appendChild(card);
    });

    // Insere as estrelas após o carregamento da página
    document.addEventListener('DOMContentLoaded', () =>
    {
        const placeholders = document.querySelectorAll('.estrelas-placeholder');

        placeholders.forEach(el =>
        {
            const nota = parseFloat(4);
            const estrelas = criarEstrelas(nota);
            el.appendChild(estrelas);
        });
    });
</script>
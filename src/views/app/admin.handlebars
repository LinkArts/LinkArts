<div class="all">
    <div class="main-wrapper">
        <aside class="sidebar">
            <a href="#" data-section="dashboard-section" class="nav-link active">Dashboard</a>
            <a href="#" data-section="user-management-section" class="nav-link">Usuários</a>
            <a href="#" data-section="content-management-section" class="nav-link">Conteúdo</a>
            <a href="#" data-section="service-management-section" class="nav-link">Serviços</a>
            <a href="#" data-section="event-management-section" class="nav-link">Eventos</a>
            <a href="#" data-section="complaints-section" class="nav-link">Denúncias</a>
        </aside>

        <main class="content-area">
            <section id="dashboard-section" class="content-section active">
                <h2>Visão Geral</h2>
                <div class="list-container">
                    <h3>Total de Usuários</h3>
                    <div class="metrics-grid" id="total-users-metrics">
                    </div>
                </div>

                <div class="list-container">
                    <div class="recent-section-content">
                        <div class="column-list">
                            <h3>Últimos Usuários Cadastrados</h3>
                            <ul class="recent-activities-list" id="last-registered-users">
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="list-container">
                    <h3>Estatísticas Gerais da Plataforma</h3>
                    <div class="metrics-grid" id="general-statistics-metrics">
                    </div>
                </div>
            </section>

            <section id="user-management-section" class="content-section">
                <h2>Gerenciamento de Usuários</h2>
                <table class="styled-table">
                    <thead>
                        <tr>
                            <th>Nome</th>
                            <th>E-mail</th>
                            <th>Tipo</th>
                            <th>Status</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody id="user-list-tbody">
                    </tbody>
                </table>
            </section>

            <section id="content-management-section" class="content-section">
                <h2>Gerenciamento de Conteúdo</h2>

                <div class="list-container">
                    <h3>Músicas e Álbuns</h3>
                    <div class="metrics-grid">
                        <div class="metric-card">
                            <div class="value" id="total-music-count">0</div>
                            <div class="label">Total de Músicas</div>
                        </div>
                        <div class="metric-card">
                            <div class="value" id="total-albums-count">0</div>
                            <div class="label">Total de Álbuns</div>
                        </div>
                    </div>
                    <h3 style="margin-top: 2rem;">Lista de Músicas</h3>
                    <table class="styled-table">
                        <thead>
                            <tr>
                                <th>Título</th>
                                <th>Artista</th>
                                <th>Álbum</th>
                                <th>Ações</th>
                            </tr>
                        </thead>
                        <tbody id="music-list-tbody">
                        </tbody>
                    </table>
                    <h3 style="margin-top: 2rem;">Lista de Álbuns</h3>
                    <table class="styled-table">
                        <thead>
                            <tr>
                                <th>Título</th>
                                <th>Artista</th>
                                <th>Ano</th>
                                <th>Ações</th>
                            </tr>
                        </thead>
                        <tbody id="album-list-tbody">
                        </tbody>
                    </table>
                </div>

                <!--<div class="list-container" style="margin-top: 3rem;">
                    <h3>Tags</h3>
                    <div class="metrics-grid">
                        <div class="metric-card">
                            <div class="value" id="total-tags-count">0</div>
                            <div class="label">Total de Tags</div>
                        </div>
                    </div>
                    <h3 style="margin-top: 2rem;">Lista de Tags</h3>
                    <ul class="recent-activities-list" id="tags-list">
                    </ul>
                </div>-->
            </section>

            <section id="service-management-section" class="content-section">
                <h2>Gerenciamento de Serviços</h2>
                <div class="list-container">
                    <h3>Pedidos de Serviço</h3>
                    <table class="styled-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Título</th>
                                <th>Cliente</th>
                                <th>Data</th>
                                <th>Status</th>
                                <th>Ações</th>
                            </tr>
                        </thead>
                        <tbody id="service-requests-tbody">
                        </tbody>
                    </table>
                </div>

                <div class="list-container" style="margin-top: 3rem;">
                    <h3>Propostas de Serviço</h3>
                    <table class="styled-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Título</th>
                                <th>Proponente</th>
                                <th>Preço</th>
                                <th>Status</th>
                                <th>Ações</th>
                            </tr>
                        </thead>
                        <tbody id="service-proposals-tbody">
                        </tbody>
                    </table>
                </div>
            </section>

            <section id="event-management-section" class="content-section">
                <h2>Gerenciamento de Eventos</h2>
                <div class="list-container">
                    <h3>Eventos Cadastrados</h3>
                    <div class="metrics-grid">
                        <div class="metric-card">
                            <div class="value" id="total-events-count">0</div>
                            <div class="label">Total de Eventos</div>
                        </div>
                    </div>
                    <table class="styled-table" style="margin-top: 2rem;">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Nome do Evento</th>
                                <th>Estabelecimento</th>
                                <th>Data</th>
                                <th>Ações</th>
                            </tr>
                        </thead>
                        <tbody id="events-list-tbody">
                        </tbody>
                    </table>
                </div>
            </section>

            <section id="complaints-section" class="content-section">
                <h2>Gerenciamento de Denúncias</h2>
                <table class="styled-table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Tipo</th>
                            <th>Denunciado</th>
                            <th>Status</th>
                            <th>Data</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody id="complaints-list-tbody">
                    </tbody>
                </table>
            </section>
        </main>
    </div>

    <div class="modal-overlay" id="details-view-modal-overlay">
        <div class="modal" id="details-view-modal">
            <div class="modal-header">
                <h2 id="modal-title">Detalhes</h2>
                <button class="modal-close-btn">&times;</button>
            </div>
            <div class="modal-body" id="modal-body-content">
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary modal-close-btn">Fechar</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () =>
    {
        // Mudar pra dados do backend
        const simulatedData = {
            totalUsers: {
                artists: 125,
                establishments: 48,
                general: 750,
            },
            recentUsers: [
                { id: '1', name: 'Gustavo', type: 'Artista', date: '2024-06-07' },
                { id: '2', name: 'Pedro', type: 'Estabelecimento', date: '2024-06-06' },
                { id: '3', name: 'Kevin', type: 'Artista', date: '2024-06-05' },
                { id: '4', name: 'Ana', type: 'Artista', date: '2024-06-07' },
            ],
            generalStats: {
                totalMusic: 2500,
                totalAlbums: 320,
                totalGenres: 55,
                totalTags: 180,
                servicesRequested: 850,
                servicesCompleted: 620,
            },

            // User Management
            users: [
                { id: 'u001', name: 'João Silva', email: 'joao.s@email.com', type: 'Artista', isActive: true },
                { id: 'u002', name: 'Bar do Zé', email: 'contato@bardoz.com', type: 'Estabelecimento', isActive: true },
                { id: 'u003', name: 'Maria Oliveira', email: 'maria.o@email.com', type: 'Geral', isActive: false },
                { id: 'u004', name: 'Estúdio Som Perfeito', email: 'som.perfeito@email.com', type: 'Estabelecimento', isActive: true },
                { id: 'u005', name: 'Pedro Souza', email: 'pedro.s@email.com', type: 'Artista', isActive: true },
                { id: 'u006', name: 'Ana Paula', email: 'ana.p@email.com', type: 'Geral', isActive: false },
                { id: 'u001', name: 'João Silva', email: 'joao.s@email.com', type: 'Artista', isActive: true },
                { id: 'u002', name: 'Bar do Zé', email: 'contato@bardoz.com', type: 'Estabelecimento', isActive: true },
                { id: 'u003', name: 'Maria Oliveira', email: 'maria.o@email.com', type: 'Geral', isActive: false },
                { id: 'u004', name: 'Estúdio Som Perfeito', email: 'som.perfeito@email.com', type: 'Estabelecimento', isActive: true },
                { id: 'u005', name: 'Pedro Souza', email: 'pedro.s@email.com', type: 'Artista', isActive: true },
                { id: 'u006', name: 'Ana Paula', email: 'ana.p@email.com', type: 'Geral', isActive: false }, { id: 'u001', name: 'João Silva', email: 'joao.s@email.com', type: 'Artista', isActive: true },
                { id: 'u002', name: 'Bar do Zé', email: 'contato@bardoz.com', type: 'Estabelecimento', isActive: true },
                { id: 'u003', name: 'Maria Oliveira', email: 'maria.o@email.com', type: 'Geral', isActive: false },
                { id: 'u004', name: 'Estúdio Som Perfeito', email: 'som.perfeito@email.com', type: 'Estabelecimento', isActive: true },
                { id: 'u005', name: 'Pedro Souza', email: 'pedro.s@email.com', type: 'Artista', isActive: true },
                { id: 'u006', name: 'Ana Paula', email: 'ana.p@email.com', type: 'Geral', isActive: false }, { id: 'u001', name: 'João Silva', email: 'joao.s@email.com', type: 'Artista', isActive: true },
                { id: 'u002', name: 'Bar do Zé', email: 'contato@bardoz.com', type: 'Estabelecimento', isActive: true },
                { id: 'u003', name: 'Maria Oliveira', email: 'maria.o@email.com', type: 'Geral', isActive: false },
                { id: 'u004', name: 'Estúdio Som Perfeito', email: 'som.perfeito@email.com', type: 'Estabelecimento', isActive: true },
                { id: 'u005', name: 'Pedro Souza', email: 'pedro.s@email.com', type: 'Artista', isActive: true },
                { id: 'u006', name: 'Ana Paula', email: 'ana.p@email.com', type: 'Geral', isActive: false }, { id: 'u001', name: 'João Silva', email: 'joao.s@email.com', type: 'Artista', isActive: true },
                { id: 'u002', name: 'Bar do Zé', email: 'contato@bardoz.com', type: 'Estabelecimento', isActive: true },
                { id: 'u003', name: 'Maria Oliveira', email: 'maria.o@email.com', type: 'Geral', isActive: false },
                { id: 'u004', name: 'Estúdio Som Perfeito', email: 'som.perfeito@email.com', type: 'Estabelecimento', isActive: true },
                { id: 'u005', name: 'Pedro Souza', email: 'pedro.s@email.com', type: 'Artista', isActive: true },
                { id: 'u006', name: 'Ana Paula', email: 'ana.p@email.com', type: 'Geral', isActive: false },
            ],

            music: [
                { id: 'm01', title: 'Minha Melodia', artist: 'João Silva', album: 'Primeiro Acorde' },
                { id: 'm02', title: 'Ritmo Urbano', artist: 'Banda da Esquina', album: 'Grandes Sucessos' },
                { id: 'm03', title: 'Caminhos do Coração', artist: 'Maria Oliveira', album: 'Alma Livre' },
            ],
            albums: [
                { id: 'a01', title: 'Primeiro Acorde', artist: 'João Silva', year: 2023 },
                { id: 'a02', title: 'Grandes Sucessos', artist: 'Banda da Esquina', year: 2022 },
            ],
            genres: [
                { id: 'g01', name: 'Rock' },
                { id: 'g02', name: 'Pop' },
                { id: 'g03', name: 'Jazz' },
                { id: 'g04', name: 'Samba' },
            ],
            /*tags: [
                { id: 't01', name: 'Ao Vivo' },
                { id: 't02', name: 'Acústico' },
                { id: 't03', name: 'Instrumental' },
                { id: 't04', name: 'Festa' },
            ],*/

            serviceRequests: [
                { id: 'sr001', title: 'Show para Casamento', client: 'Família Santos', date: '2024-07-20', status: 'Pendente', description: 'Show acústico para cerimônia de casamento. Repertório de músicas românticas.' },
                { id: 'sr002', title: 'DJ para Festa de 15 Anos', client: 'Isabela Costa', date: '2024-08-10', status: 'Aceito', description: 'DJ para festa de 15 anos com mix de pop e eletrônica.' },
                { id: 'sr003', title: 'Banda para Evento Corporativo', client: 'Tech Solutions', date: '2024-06-01', status: 'Concluído', description: 'Banda de pop-rock para evento de confraternização da empresa.' },
                { id: 'sr004', title: 'Sessão de Fotos Profissional', client: 'Estúdio Criativo', date: '2024-09-05', status: 'Pendente', description: 'Sessão de fotos para portfólio de modelo.' },
            ],
            serviceProposals: [
                { id: 'sp001', title: 'Apresentação Acústica - Café Aroma', proponent: 'Pedro Souza', price: 800.00, status: 'Pendente', description: 'Proposta para show acústico semanal no café. Repertório variado.' },
                { id: 'sp002', title: 'Gravação de Podcast - Estúdio Voz', proponent: 'Estúdio Voz Perfeita', price: 500.00, status: 'Aprovado', description: 'Proposta de locação de estúdio para gravação de podcast por 4 horas.' },
                { id: 'sp003', title: 'Show de Forró - Clube da Alegria', proponent: 'Forrozeiros do Sul', price: 1500.00, status: 'Rejeitado', description: 'Proposta para show de forró em festa junina.' },
            ],

            events: [
                { id: 'ev001', name: 'Noite de Talentos Locais', establishment: 'Centro Cultural', date: '2024-07-15', views: 1200, highlighted: true, description: 'Evento para apresentação de novos talentos musicais da cidade.' },
                { id: 'ev002', name: 'Happy Hour com Música ao Vivo', establishment: 'Bar do Zé', date: '2024-06-20', views: 850, highlighted: false, description: 'Música ao vivo e promoções de bebidas no happy hour.' },
                { id: 'ev003', name: 'Feira de Artesanato e Cultura', establishment: 'Praça Principal', date: '2024-08-01', views: 2500, highlighted: false, description: 'Feira com artistas locais, comidas típicas e apresentações culturais.' },
            ],

            userGrowth: [
                { month: 'Jan', total: 100 },
                { month: 'Fev', total: 120 },
                { month: 'Mar', total: 150 },
                { month: 'Abr', total: 180 },
                { month: 'Mai', total: 220 },
                { month: 'Jun', total: 250 },
            ],
            mostRequestedServices: [
                { name: 'Show para Casamento', count: 50 },
                { name: 'DJ para Festas', count: 45 },
                { name: 'Gravação em Estúdio', count: 30 },
                { name: 'Aulas de Instrumento', count: 25 },
            ],
            mostPopularGenres: [
                { name: 'Pop', count: 180 },
                { name: 'Rock', count: 150 },
                { name: 'Samba', count: 120 },
                { name: 'Eletrônica', count: 90 },
            ],

            complaints: [
                { id: 'den001', type: 'Comportamento Inapropriado', reported: 'João Silva (Artista)', status: 'Pendente', date: '2024-06-01', details: 'Comentários ofensivos em chat de serviço.' },
                { id: 'den002', type: 'Conteúdo Irregular', reported: 'Música "Livre Mente"', status: 'Revisado', date: '2024-05-28', details: 'Música com letra de ódio.' },
                { id: 'den003', type: 'Não Cumprimento de Serviço', reported: 'Bar do Zé (Estabelecimento)', status: 'Resolvido', date: '2024-05-20', details: 'Cancelamento de show sem aviso prévio.' },
                { id: 'den004', type: 'Spam/Abuso', reported: 'Maria Oliveira (Geral)', status: 'Pendente', date: '2024-06-05', details: 'Envio excessivo de mensagens promocionais.' },
            ]
        };

        const navLinks = document.querySelectorAll('.nav-link');
        const contentSections = document.querySelectorAll('.content-section');

        const detailsViewModalOverlay = document.getElementById('details-view-modal-overlay');
        const detailsViewModal = document.getElementById('details-view-modal');
        const modalTitle = document.getElementById('modal-title');
        const modalBodyContent = document.getElementById('modal-body-content');
        const modalCloseBtns = detailsViewModal.querySelectorAll('.modal-close-btn');

        function openModal(title, contentHtml)
        {
            modalTitle.textContent = title;
            modalBodyContent.innerHTML = contentHtml;
            detailsViewModalOverlay.classList.add('active');
        }

        function closeModal()
        {
            modalTitle.textContent = '';
            modalBodyContent.innerHTML = '';
            detailsViewModalOverlay.classList.remove('active');
        }

        modalCloseBtns.forEach(btn =>
        {
            btn.addEventListener('click', closeModal);
        });
        detailsViewModalOverlay.addEventListener('click', (e) =>
        {
            if (e.target === detailsViewModalOverlay)
            {
                closeModal();
            }
        });

        function renderDashboardOverview()
        {
            const totalUsersContainer = document.getElementById('total-users-metrics');
            const { artists, establishments, general } = simulatedData.totalUsers;
            totalUsersContainer.innerHTML = `
                    <div class="metric-card">
                        <div class="value">${ artists }</div>
                        <div class="label">Artistas</div>
                    </div>
                    <div class="metric-card">
                        <div class="value">${ establishments }</div>
                        <div class="label">Estabelecimentos</div>
                    </div>
                    <div class="metric-card">
                        <div class="value">${ artists + establishments + general }</div>
                        <div class="label">Total de Usuários</div>
                    </div>
                `;

            const lastRegisteredUsersList = document.getElementById('last-registered-users');
            lastRegisteredUsersList.innerHTML = '';
            simulatedData.recentUsers.forEach(user =>
            {
                const li = document.createElement('li');
                li.innerHTML = `<strong>${ user.name } (${user.type})</strong> <span>${ user.date }</span>`;
                lastRegisteredUsersList.appendChild(li);
            });

            const generalStatsContainer = document.getElementById('general-statistics-metrics');
            const { totalMusic, totalAlbums, totalGenres, totalTags, servicesRequested, servicesCompleted } = simulatedData.generalStats;
            generalStatsContainer.innerHTML = `
                    <div class="metric-card">
                        <div class="value">${ totalMusic }</div>
                        <div class="label">Músicas</div>
                    </div>
                    <div class="metric-card">
                        <div class="value">${ totalAlbums }</div>
                        <div class="label">Álbuns</div>
                    </div>
                    <div class="metric-card">
                        <div class="value">${ totalGenres }</div>
                        <div class="label">Gêneros</div>
                    </div>
                    <div class="metric-card">
                        <div class="value">${ totalTags }</div>
                        <div class="label">Tags</div>
                    </div>
                    <div class="metric-card">
                        <div class="value">${ servicesRequested }</div>
                        <div class="label">Serviços Solicitados</div>
                    </div>
                    <div class="metric-card">
                        <div class="value">${ servicesCompleted }</div>
                        <div class="label">Serviços Concluídos</div>
                    </div>
                `;
        }

        function renderUserManagement()
        {
            const userListBody = document.getElementById('user-list-tbody');
            userListBody.innerHTML = '';
            simulatedData.users.forEach(user =>
            {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                        <td>${ user.name }</td>
                        <td>${ user.email }</td>
                        <td>${ user.type }</td>
                        <td><span style="color:${ user.isActive ? '#28a745' : '#dc3545' };">${ user.isActive ? 'Ativo' : 'Inativo' }</span></td>
                        <td>
                            <div class="action-buttons">
                                <button class="btn ${ user.isActive ? 'btn-danger' : 'btn-success' }" data-action="toggle-status" data-id="${ user.id }">
                                    ${ user.isActive ? 'Desativar' : 'Ativar' }
                                </button>
                                <button class="btn btn-info" data-action="view-details" data-id="${ user.id }" data-type="user">Ver Detalhes</button>
                            </div>
                        </td>
                    `;
                userListBody.appendChild(tr);
            });

            userListBody.querySelectorAll('[data-action="toggle-status"]').forEach(button =>
            {
                button.addEventListener('click', (e) =>
                {
                    const userId = e.target.dataset.id;
                    const user = simulatedData.users.find(u => u.id === userId);
                    if (user)
                    {
                        // Fetch de suspender
                        user.isActive = !user.isActive;
                        alert(`Usuário "${ user.name }" ${ user.isActive ? 'ativado' : 'desativado' } (simulado).`);
                        renderUserManagement();
                    }
                });
            });
            userListBody.querySelectorAll('[data-action="view-details"]').forEach(button =>
            {
                button.addEventListener('click', (e) =>
                {
                    const id = e.target.dataset.id;
                    const user = simulatedData.users.find(item => item.id === id);
                    if (user)
                    {
                        const content = `
                                <p><strong>ID:</strong> ${ user.id }</p>
                                <p><strong>Nome:</strong> ${ user.name }</p>
                                <p><strong>E-mail:</strong> ${ user.email }</p>
                                <p><strong>Tipo:</strong> ${ user.type }</p>
                                <p><strong>Status:</strong> ${ user.isActive ? 'Ativo' : 'Inativo' }</p>
                            `;
                        openModal(`Detalhes do Usuário: ${ user.name }`, content);
                    }
                });
            });
        }

        function renderContentManagement()
        {
            document.getElementById('total-music-count').textContent = simulatedData.music.length;
            document.getElementById('total-albums-count').textContent = simulatedData.albums.length;
            //document.getElementById('total-tags-count').textContent = simulatedData.tags.length;

            const musicListBody = document.getElementById('music-list-tbody');
            musicListBody.innerHTML = '';
            simulatedData.music.forEach(item =>
            {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                        <td>${ item.title }</td>
                        <td>${ item.artist }</td>
                        <td>${ item.album }</td>
                        <td>
                            <div class="action-buttons">
                                <button class="btn btn-danger" data-action="delete" data-id="${ item.id }" data-type="music">Excluir</button>
                            </div>
                        </td>
                    `;
                musicListBody.appendChild(tr);
            });

            const albumListBody = document.getElementById('album-list-tbody');
            albumListBody.innerHTML = '';
            simulatedData.albums.forEach(item =>
            {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                        <td>${ item.title }</td>
                        <td>${ item.artist }</td>
                        <td>${ item.year }</td>
                        <td>
                            <div class="action-buttons">
                                <button class="btn btn-danger" data-action="delete" data-id="${ item.id }" data-type="album">Excluir</button>
                            </div>
                        </td>
                    `;
                albumListBody.appendChild(tr);
            });

            const tagsList = document.getElementById('tags-list');
            tagsList.innerHTML = '';
            /*simulatedData.tags.forEach(item =>
            {
                const li = document.createElement('li');
                li.innerHTML = `
                        <strong>${ item.name }</strong>
                        <div class="action-buttons">
                            <button class="btn btn-warning" data-action="edit" data-id="${ item.id }" data-type="tag">Editar</button>
                            <button class="btn btn-danger" data-action="delete" data-id="${ item.id }" data-type="tag">Excluir</button>
                        </div>
                    `;
                tagsList.appendChild(li);
            });*/
        }

        function renderServiceManagement()
        {
            const serviceRequestsBody = document.getElementById('service-requests-tbody');
            serviceRequestsBody.innerHTML = '';
            simulatedData.serviceRequests.forEach(item =>
            {
                const tr = document.createElement('tr');
                let statusColor = '';
                switch (item.status)
                {
                    case 'Pendente': statusColor = 'var(--star-rating-color)'; break;
                    case 'Aceito': statusColor = '#28a745'; break;
                    case 'Concluído': statusColor = 'var(--primary-color)'; break;
                    default: statusColor = 'var(--secondary-text-color)';
                }
                tr.innerHTML = `
                        <td>${ item.id }</td>
                        <td>${ item.title }</td>
                        <td>${ item.client }</td>
                        <td>${ item.date }</td>
                        <td><span style="color:${ statusColor }; font-weight: bold;">${ item.status }</span></td>
                        <td>
                            <div class="action-buttons">
                                <button class="btn btn-info" data-action="view-details" data-id="${ item.id }" data-type="serviceRequest">Ver Detalhes</button>
                            </div>
                        </td>
                    `;
                serviceRequestsBody.appendChild(tr);
            });

            const serviceProposalsBody = document.getElementById('service-proposals-tbody');
            serviceProposalsBody.innerHTML = '';
            simulatedData.serviceProposals.forEach(item =>
            {
                const tr = document.createElement('tr');
                let statusColor = '';
                switch (item.status)
                {
                    case 'Pendente': statusColor = 'var(--star-rating-color)'; break;
                    case 'Aprovado': statusColor = '#28a745'; break;
                    case 'Rejeitado': statusColor = '#dc3545'; break;
                    default: statusColor = 'var(--secondary-text-color)';
                }
                tr.innerHTML = `
                        <td>${ item.id }</td>
                        <td>${ item.title }</td>
                        <td>${ item.proponent }</td>
                        <td>R$ ${ item.price.toFixed(2).replace('.', ',') }</td>
                        <td><span style="color:${ statusColor }; font-weight: bold;">${ item.status }</span></td>
                        <td>
                            <div class="action-buttons">
                                <button class="btn btn-info" data-action="view-details" data-id="${ item.id }" data-type="serviceProposal">Ver Detalhes</button>
                            </div>
                        </td>
                    `;
                serviceProposalsBody.appendChild(tr);
            });
        }

        function renderEventManagement()
        {
            document.getElementById('total-events-count').textContent = simulatedData.events.length;

            const eventsListBody = document.getElementById('events-list-tbody');
            eventsListBody.innerHTML = '';
            simulatedData.events.forEach(item =>
            {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                        <td>${ item.id }</td>
                        <td>${ item.name }</td>
                        <td>${ item.establishment }</td>
                        <td>${ item.date }</td>
                        <td>
                            <div class="action-buttons">
                                <button class="btn btn-info" data-action="view-details" data-id="${ item.id }" data-type="event">Ver Detalhes</button>
                            </div>
                        </td>
                    `;
                eventsListBody.appendChild(tr);
            });
        }

        function renderComplaints()
        {
            const complaintsListBody = document.getElementById('complaints-list-tbody');
            complaintsListBody.innerHTML = '';
            simulatedData.complaints.forEach(item =>
            {
                const tr = document.createElement('tr');
                let statusColor = '';
                switch (item.status)
                {
                    case 'Pendente': statusColor = 'var(--star-rating-color)'; break;
                    case 'Revisado': statusColor = '#17a2b8'; break;
                    case 'Resolvido': statusColor = '#28a745'; break;
                    default: statusColor = 'var(--secondary-text-color)';
                }
                tr.innerHTML = `
                        <td>${ item.id }</td>
                        <td>${ item.type }</td>
                        <td>${ item.reported }</td>
                        <td><span style="color:${ statusColor }; font-weight: bold;">${ item.status }</span></td>
                        <td>${ item.date }</td>
                        <td>
                            <div class="action-buttons">
                                <button class="btn btn-info" data-action="view-details" data-id="${ item.id }" data-type="complaint">Ver Detalhes</button>
                                ${ item.status === 'Pendente' ? `<button class="btn btn-success" data-action="resolve-complaint" data-id="${ item.id }">Resolver</button>` : '' }
                            </div>
                        </td>
                    `;
                complaintsListBody.appendChild(tr);
            });
            complaintsListBody.querySelectorAll('[data-action="view-details"]').forEach(button =>
            {
                button.addEventListener('click', (e) =>
                {
                    const id = e.target.dataset.id;
                    const complaint = simulatedData.complaints.find(item => item.id === id);
                    if (complaint)
                    {
                        const content = `
                                <p><strong>ID:</strong> ${ complaint.id }</p>
                                <p><strong>Tipo:</strong> ${ complaint.type }</p>
                                <p><strong>Denunciado:</strong> ${ complaint.reported }</p>
                                <p><strong>Status:</strong> ${ complaint.status }</p>
                                <p><strong>Data:</strong> ${ complaint.date }</p>
                                <p><strong>Detalhes:</strong> ${ complaint.details }</p>
                            `;
                        openModal(`Detalhes da Denúncia: ${ complaint.id }`, content);
                    }
                });
            });
            complaintsListBody.querySelectorAll('[data-action="resolve-complaint"]').forEach(button =>
            {
                button.addEventListener('click', (e) =>
                {
                    const id = e.target.dataset.id;
                    const complaint = simulatedData.complaints.find(c => c.id === id);
                    if (complaint && confirm(`Marcar denúncia ${ id } como resolvida?`))
                    {
                        // Fetch pra fechar denuncia
                        complaint.status = 'Resolvido';
                        alert(`Denúncia ${ id } marcada como resolvida (simulado).`);
                        renderComplaints();
                    }
                });
            });
        }

        const sectionRenderFunctions = {
            'dashboard-section': renderDashboardOverview,
            'user-management-section': renderUserManagement,
            'content-management-section': renderContentManagement,
            'service-management-section': renderServiceManagement,
            'event-management-section': renderEventManagement,
            'complaints-section': renderComplaints
        };

        function showSection(sectionId)
        {
            contentSections.forEach(section =>
            {
                section.classList.remove('active');
            });

            navLinks.forEach(link =>
            {
                link.classList.remove('active');
            });

            const activeSection = document.getElementById(sectionId);
            if (activeSection)
            {
                activeSection.classList.add('active');
                document.querySelector(`.nav-link[data-section="${ sectionId }"]`).classList.add('active');

                if (sectionRenderFunctions[sectionId])
                {
                    sectionRenderFunctions[sectionId]();
                }
            }
        }

        navLinks.forEach(link =>
        {
            link.addEventListener('click', (e) =>
            {
                e.preventDefault();
                const sectionId = e.target.dataset.section;
                if (sectionId)
                {
                    showSection(sectionId);
                }
            });
        });

        showSection('dashboard-section');
    });
</script>
<main class="my-3"></main>

    <div class="container">

      <div class="row my-3">

        <div class="row my-5">

              <a href="/thoughts/dashboard/{{id}}">Voltar </a>
          </div>

        <div class="col">

          <div class="card border-dark" style="width: 18rem;">
            <img src="{{user.img}}" class="card-img-top" alt="...">
            <div class="card-body bg-secondary">
              <h4 class="card-title text-white" style="margin-left: 63px;">{{user.name}}</h4>
              <h6 class="card-title text-white" style="margin-left: 63px;">Localidade: {{user.city}}, {{user.state}}</h6>
            </div>
          </div>


        </div>

        <div class="col">
            <div class="toast-header">
              <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="yellow" class="bi bi-star-half"
                viewBox="0 0 16 16">
                <path
                  d="M5.354 5.119 7.538.792A.52.52 0 0 1 8 .5c.183 0 .366.097.465.292l2.184 4.327 4.898.696A.54.54 0 0 1 16 6.32a.55.55 0 0 1-.17.445l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256a.5.5 0 0 1-.146.05c-.342.06-.668-.254-.6-.642l.83-4.73L.173 6.765a.55.55 0 0 1-.172-.403.6.6 0 0 1 .085-.302.51.51 0 0 1 .37-.245zM8 12.027a.5.5 0 0 1 .232.056l3.686 1.894-.694-3.957a.56.56 0 0 1 .162-.505l2.907-2.77-4.052-.576a.53.53 0 0 1-.393-.288L8.001 2.223 8 2.226z" />
              </svg>
               <a href="/thoughts/avaliacoes/{{user.id}}/{{id}}"><strong class="me-auto text-info" style="font-size: 30px;">Avaliações</strong></a>
              <small class="text-success" style="margin-left: 10px;">Última Atualização à 11 minutos</small>
            </div>
            <div class="toast-body my-3">
              <div class="progress" role="progressbar" aria-label="Basic example" aria-valuenow="75" aria-valuemin="0"
                aria-valuemax="100">
                <div class="progress-bar bg-info" style="width: {{porcentagem}}%"></div>
              </div>
              <strong class="my-3 text-success" style="margin-left: 230px; font-size: 24px;">{{media}}/5.0</strong>

                {{#if selfView}}

                {{else}}
                <div class="card border-dark bg-secondary">
                <button class="btn btn-primary" onclick="toggleForm2()">Enviar Avaliação</button>
                </div>
                {{/if}}
            </div>
        </div>

      </div>
      <div class="row my-3">

        <div class="col">
          {{#if type}}
            {{#if selfView}}
              <a href="/thoughts/propostas/{{id}}" class="btn btn-primary">Minhas Propostas</a>
              <button class="btn btn-primary" onclick="toggleForm()">Cadastrar Endereço</button>
              <button  class="btn btn-primary" onclick="toggleForm3()">Cadastrar Evento</button>
              <a href="/thoughts/edit/{{id}}" class="btn btn-primary">Editar Perfil</a>

              <div class="col">
                <div id="myForm" style="display: none; margin-top: 10px; width: 100%">
                  <form action="/thoughts/cadastrarEndereco" method="POST" style="border: 1px solid #ccc; padding: 20px; width: 300px;">
                      <label for="cep">CEP:</label><br>
                      <input type="number" id="cep" name="cep" placeholder="Digite o CEP sem pontos ou traços" required><br><br>

                      <label for="hora_abertura">Horário de abertura:</label>
                      <input type="time" id="hora_abertura" name="hora_abertura" ><br><br>
                      
                      <label for="hora_fechamento">Horário de fechamento:</label>
                      <input type="time" id="hora_fechamento" name="hora_fechamento" ><br><br>

                      <input type="submit" value="Enviar">
                  </form>
                </div>
              </div>
              
              <div class="col">
                <div id="eventoForm" style="display: none; margin-top: 10px; width: 100%">
                  <form action="/thoughts/cadastrarEvento/{{id}}" method="POST" style="border: 1px solid #ccc; padding: 20px; width: 300px;" enctype="multipart/form-data">
                       <label for="data_evento">Data do Evento:</label>
                    <input type="date" id="data_evento" name="data" required>

                    <label for="hora_evento">Horário de início do Evento:</label>
                    <input type="time" id="hora_evento" name="horaInicial" required>

                    <label for="hora_fim_evento">Horário de fim do Evento:</label>
                    <input type="time" id="hora_fim_evento" name="horaFim" required>

                    <label for="endereco">Endereço:</label>
                    <select id="endereco" name="endereco" class="form-control" class="form-control"  style="margin-bottom: 1em;" onmousemove="loadEnderecos({{id}})">
                        <option >Selecione uma opção</option>
                    </select required>

                    <div class="form-floating mb-3">
                      <input type="file" id="image" name="image" class="form-control" accept="image/*">
                      <label for="image">Selecionar Imagem</label>
                    </div>
                    <div class="form-floating mb-3">
                        <input class="form-control" id="descricao" name="descricao" type="text" placeholder="Descrição" />
                        <label for="descricao">Descrição</label>
                    </div>
                    <div class="form-floating mb-3"></div>
                        <label for="nome">Nome</label>
                        <input class="form-control" id="nome" name="nome" type="text" placeholder="Nome" />
                      <input type="submit" value="Enviar">
                  </form>
                    </div>
                
              </div>
            {{else}}
              <a href="/thoughts/propostaArtista/{{user.id}}/{{id}}" class="btn btn-primary">Fazer Proposta à Empresa</a>
              <a href="/chat/conversar/{{user.id}}/{{id}}" class="btn btn-primary">Abrir Conversa</a>
            {{/if}}
          {{else}}
            {{#if selfView}}
              <a href="/thoughts/propostas/{{id}}" class="btn btn-primary">Minhas Propostas</a>
              <a href="/thoughts/musicas/{{id}}" class="btn btn-primary">Cadastrar Talento Musical</a>
              <a href="/thoughts/edit/{{id}}" class="btn btn-primary">Editar Perfil</a>
            {{else}}
              <a href="/thoughts/propostaEmpresa/{{user.id}}/{{id}}" class="btn btn-primary">Fazer Proposta ao(a) Artista</a>
              <a href="/chat/conversar/{{user.id}}/{{id}}" class="btn btn-primary">Abrir Conversa</a>
            {{/if}}
          {{/if}}

          {{#if type}}

          {{else}}
          <div class="card my-3 bg-secondary border-dark" style="height: 166px; overflow-y: scroll;">

            <div class="card-body">

              <h1 class="text-white" style="margin-left: 150px; font-size: 24px;">O que eu faço</h1>
              {{#each tags}}
              {{#if this.instrumento}}
              <button class="btn rounded-pill btn-primary my-3">{{this.talent.descricao}}<svg xmlns="http://www.w3.org/2000/svg" width="16"
                  height="16" fill="currentColor" class="bi bi-music-note-beamed" style="margin-left: 10px;"
                  viewBox="0 0 16 16">
                  <path
                    d="M6 13c0 1.105-1.12 2-2.5 2S1 14.105 1 13s1.12-2 2.5-2 2.5.896 2.5 2m9-2c0 1.105-1.12 2-2.5 2s-2.5-.895-2.5-2 1.12-2 2.5-2 2.5.895 2.5 2" />
                  <path fill-rule="evenodd" d="M14 11V2h1v9zM6 3v10H5V3z" />
                  <path d="M5 2.905a1 1 0 0 1 .9-.995l8-.8a1 1 0 0 1 1.1.995V3L5 4z" />
                </svg></button>
                {{else}}
                  {{#if this.genero}}
                    <button class="btn rounded-pill btn-info my-3">{{this.talent.descricao}}<svg xmlns="http://www.w3.org/2000/svg" width="16"
                  height="16" fill="currentColor" class="bi bi-music-note-beamed" style="margin-left: 10px;"
                  viewBox="0 0 16 16">
                  <path
                    d="M6 13c0 1.105-1.12 2-2.5 2S1 14.105 1 13s1.12-2 2.5-2 2.5.896 2.5 2m9-2c0 1.105-1.12 2-2.5 2s-2.5-.895-2.5-2 1.12-2 2.5-2 2.5.895 2.5 2" />
                  <path fill-rule="evenodd" d="M14 11V2h1v9zM6 3v10H5V3z" />
                  <path d="M5 2.905a1 1 0 0 1 .9-.995l8-.8a1 1 0 0 1 1.1.995V3L5 4z" />
                </svg></button>
                  {{else}}
                      <button class="btn rounded-pill btn-warning my-3">{{this.talent.descricao}}<svg xmlns="http://www.w3.org/2000/svg" width="16"
                  height="16" fill="currentColor" class="bi bi-music-note-beamed" style="margin-left: 10px;"
                  viewBox="0 0 16 16">
                  <path
                    d="M6 13c0 1.105-1.12 2-2.5 2S1 14.105 1 13s1.12-2 2.5-2 2.5.896 2.5 2m9-2c0 1.105-1.12 2-2.5 2s-2.5-.895-2.5-2 1.12-2 2.5-2 2.5.895 2.5 2" />
                  <path fill-rule="evenodd" d="M14 11V2h1v9zM6 3v10H5V3z" />
                  <path d="M5 2.905a1 1 0 0 1 .9-.995l8-.8a1 1 0 0 1 1.1.995V3L5 4z" />
                </svg></button>
                  {{/if}}
                {{/if}}
                {{/each}}

            </div>

          </div>
          {{/if}}

          <div class="card my-3 bg-secondary border-dark" style="height: 300px; overflow-y: scroll; width: 495px;">

            <div class="card-body">

              <h1 class="text-white" style="margin-left:  160px; font-size: 24px;">Descrição</h1>

              <p class="text-white my-3" style="font-size: 20px;">{{user.description}}</p>

            </div>

          </div>

        {{#if selfView}}
    
        {{else}}
            <a class="btn btn-success" href="/thoughts/favoritar/{{id}}/{{user.id}}">Adicionar como favorito</a>
        {{/if}}

        </div>

        <div class="col my-3">

                      <div id="avalForm" style="display: none; margin-top: 10px; width: 100%">
                  <form action="/thoughts/avaliar/{{id}}/{{user.id}}" method="POST" style="border: 1px solid #ccc; padding: 20px; width: 300px;">
                      <label for="conteudo">Mensagem:</label><br>
                      <input type="text" id="conteudo" name="conteudo" placeholder="Digite o que achou da sua experiência de serviço"><br><br>

                      <label for="nota">estrelas:</label>
                      <input type="number" id="nota" name="nota" step="1" placeholder="Digite uma nota de 0 a 5" max="5" min="0"><br><br>
                      
                      <select id="servico" name="servico" class="form-control" class="form-control"  style="margin-bottom: 1em;" onmousemove="loadServicos({{id}},{{user.id}})">
                <option >Selecione uma opção</option>
            </select required><br><br>

                      <input type="submit" value="Enviar">
                  </form>
                </div>

          {{#if type}}
          <div class="card my-3 bg-secondary border-dark" style="margin-left: 85px; width: 500px;">

            <div class="card-body">

              <h1 class="text-white" style="margin-left: 170px; font-size: 24px;">Eventos</h1>

              <ul class="list-group nav-pills nav-stacked bg-info my-3" style="height: 240px; overflow-y: scroll;">
                {{#each eventos}}
                <li class="list-group-item nav-item" style="font-size: 20px; background-color: #17a2b8;">
                    <img src="/uploads/{{this.img}}" style="width: 80px;"  alt="Imagem do evento"><br>
                    <strong>{{this.nome}}</strong><br>
                    <p>Endereço: {{this.local}}</p>
                    <br><p>data: {{this.data}}</p>
                    <br><p>Hora de Início: {{this.horaInicial}}</p>
                    <br><p>Hora Final: {{this.horaFim}}</p></li>
                {{/each}}
              </ul>

            </div>

          </div>

          <div class="card my-3 bg-secondary border-dark" style="margin-left: 85px; width: 500px;">

            <div class="card-body">

              <h1 class="text-white" style="margin-left: 170px; font-size: 24px;">Endereços</h1>
              <ul class="list-group nav-pills nav-stacked bg-info my-3" style="height: 240px; overflow-y: scroll;">
                {{#each locais}}
                <li class="list-group-item nav-item" style="font-size: 20px; background-color: #17a2b8;"><a
                    class="nav-link" href="MusicaScreenCorp.html"
                    style=" margin-left: 70px; color: white; font-size: 24px;"><strong>{{this.endereco}}</strong>
                    <br><p>Abre: {{this.horaInicio}}</p>
                    <br><p>Fecha: {{this.horaFim}}</p></li>
                {{/each}}
              </ul>
    
            </div>

          </div>

          {{else}}

            <div class="card my-3 bg-secondary border-dark" style="margin-left: 85px; width: 500px;">
    <div class="card-body">
        <h1 class="text-white" style="margin-left: 170px; font-size: 24px;">Trabalhos</h1>
        <ul class="list-group nav-pills nav-stacked bg-info my-3" style="height: 240px; overflow-y: scroll;" id="directory-container">
            <!-- Diretórios renderizados aqui -->
        </ul>
    </div>
</div>

          {{#if selfView}}
          <button class="btn btn-primary" onclick="toggleForm4()">Criar Pasta</button>
          {{/if}}
          <div id="pastaForm" style="display: none; margin-top: 10px; width: 100%">
                  <form action="/thoughts/criarPasta/{{id}}" method="POST" style="border: 1px solid #ccc; padding: 20px; width: 300px;">
                      <label for="nome">nome:</label><br>
                      <input type="text" id="nome" name="nome" placeholder="Nome da pasta" required><br><br>
                      <input type="submit" value="Criar">
                  </form>
          </div>

          {{/if}}

          
        </div>

        {{#if selfView}}
        <div style="display: none;">
          <p id="identity">{{id}}</p>
          <p id="owner">sim</p>
        </div>
        {{else}}
          <div style="display: none;">
          <p id="identity">{{user.id}}</p>
          <p id="owner">não</p>
        </div>
        {{/if}}
      </div>

  </main>
  <script src="js/bootstrap.bundle.js"></script>
  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
    integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"
    integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js"
    integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
    crossorigin="anonymous"></script>


</body>

</html>

    <script>

      let directories;  // Declarada globalmente, sem valor inicialmente

window.onload = async function() {
    const id = document.getElementById('identity').textContent;

    try {
        const response = await fetch(`/loadFiles/${id}`);
        directories = await response.json();  // Agora 'directories' é preenchido com os dados da API
        console.log(directories);
        renderDirectories(directories);  // Passa 'directories' para renderização
    } catch (error) {
        console.error('Erro ao carregar os diretórios:', error);
    }
};
const permission = document.getElementById('owner').textContent;
// Suponha que esta variável seja definida dinamicamente com base na autenticação

let isOwner
if(permission == 'sim'){
  isOwner = true; // Troque para false para testar a visualização de outro usuário
}
else{
  isOwner = false
}
let currentDirectoryIndex = -1;

// Função para criar os cards de diretórios
function renderDirectories(directories) {
    const id = document.getElementById('identity').textContent;
    const container = document.getElementById('directory-container');
    container.innerHTML = '';

    directories.forEach((directory, index) => {
        const li = document.createElement('li');
        
        
        // Criando o card do diretório
        const card = document.createElement('div');
        card.className = 'fileCard';
        card.innerText = directory.name;
        card.onclick = () => toggleModal(index, li, directories); // Passa directories aqui
        if(isOwner){
          const deleteButton = document.createElement('button')
          deleteButton.innerText = 'Deletar'
          deleteButton.onclick = () => deleteDir(directory.name)
          li.appendChild(card);
          li.appendChild(deleteButton)
        }
        else{
          li.appendChild(card);
        }

        // Criando o modal de upload de arquivos, vídeos e links dentro de cada li
        const modal = document.createElement('div');
        modal.className = 'modal';
        modal.id = `modal-${index}`;
        modal.innerHTML = `
           <h3>Arquivos, Vídeos e Links</h3>
<ul id="file-list-${index}" class="file-list"></ul>
<div id="video-list-${index}" class="video-container"></div>
<div id="link-list-${index}" class="link-container"></div>
${isOwner ? `
<input type="file" id="file-input-${index}" class="file-upload" />
<button onclick="uploadFile(${index}, directories)">Fazer Upload</button>

<!-- Adicionar vídeo do YouTube -->
<input type="text" id="youtube-url-${index}" placeholder="Cole a URL do vídeo do YouTube" />
<button onclick="addYouTubeVideo(${index}, directories)">Adicionar Vídeo do YouTube</button>

<!-- Adicionar Link Externo -->
<input type="text" id="link-url-${index}" placeholder="Adicione um link externo" />
<button onclick="addExternalLink(${index}, directories)">Adicionar Link</button>

<button onclick="window.location.reload()">Fechar</button>
` : `
<button onclick="window.location.reload()">Fechar</button>
`}

        `;
        
        li.appendChild(modal);
        container.appendChild(li);
    });
}

// Função para abrir/fechar o modal dentro do li
function toggleModal(index, li, directories) {
    const modal = li.querySelector(`#modal-${index}`);
    const isDisplayed = modal.style.display === 'block';
    modal.style.display = isDisplayed ? 'none' : 'block';
    
    if (!isDisplayed) {
        // Carregar os arquivos, vídeos e links no modal
        openDirectory(index, directories);
    }
}

// Função para carregar os arquivos, vídeos e links no modal
function toggleModal(index, li, directories) {
    const modal = li.querySelector(`#modal-${index}`);
    const isDisplayed = modal.style.display === 'block';
    
    modal.style.display = isDisplayed ? 'none' : 'block';
    
    if (!isDisplayed) {
        // Carregar os arquivos, vídeos e links no modal
        openDirectory(index, directories);
    }
}

 // Função para carregar os arquivos, vídeos e links no modal
        function openDirectory(index) {
            const fileList = document.getElementById(`file-list-${index}`);
            const videoList = document.getElementById(`video-list-${index}`);
            const linkList = document.getElementById(`link-list-${index}`);

            const files = directories[index].files;
            const videos = directories[index].videos;
            const links = directories[index].links;

            if(isOwner){
              fileList.innerHTML = files.map(file => `<li><a href="${file}" download="${file}">Baixar - ${ file.substring(file.lastIndexOf('/') + 1)}</a> <button onclick="deleteFile('file','${directories[index].name}','${file.substring(file.lastIndexOf('/') + 1)}')">Deletar</button></li>`).join('');
            videoList.innerHTML = videos.map(video => `<iframe src="https://www.youtube.com/embed/${video}" frameborder="0" allowfullscreen></iframe> <button onclick="deleteFile('video','${directories[index].name}','${video}')">Deletar</button>`).join('');
            linkList.innerHTML = links.map(link => `<li><a href="${link.url}" target="_blank">${link.name}</a> <button onclick="deleteFile('link','${encodeURIComponent(directories[index].name)}','${encodeURIComponent(link.url)}')">Deletar</button></li>`).join('<br>');
            }
            else{
              fileList.innerHTML = files.map(file => `<li><a href="${file}" download="${file}">Baixar - ${ file.substring(file.lastIndexOf('/') + 1)}</a></li>`).join('');
            videoList.innerHTML = videos.map(video => `<iframe src="https://www.youtube.com/embed/${video}" frameborder="0" allowfullscreen></iframe>`).join('');
            linkList.innerHTML = links.map(link => `<li><a href="${link.url}" target="_blank">${link.name}</a></li>`).join('<br>');
            }
        }

// Função para fazer upload de arquivo
async function uploadFile(index, directories) {
    const fileInput = document.getElementById(`file-input-${index}`);
    const file = fileInput.files[0];
    const id = document.getElementById('identity').textContent;

    if (file && index !== -1) {
        const formData = new FormData();
        formData.append('file', file);
        formData.append('directory', directories[index].name);  // Envia o nome do diretório

        try {
            const response = await fetch(`/thoughts/uploadFile/${id}`, {
                method: 'POST',
                body: formData
            });

            const result = await response.json();

            if (result.success) {
                alert(`Arquivo ${file.name} enviado com sucesso!`);
                window.location.reload();
            } else {
                alert('Erro ao fazer o upload do arquivo.');
            }
        } catch (error) {
            console.error('Erro ao fazer o upload:', error);
            alert('Erro ao fazer o upload do arquivo.');
        }
    } else {
        alert('Nenhum arquivo selecionado ou diretório inválido.');
    }
}


// Função para adicionar um vídeo do YouTube
function addYouTubeVideo(index, directories) {
    const youtubeUrl = document.getElementById(`youtube-url-${index}`).value;
    const videoId = extractYouTubeVideoId(youtubeUrl);  // Extrai o ID do vídeo
    const id = document.getElementById('identity').textContent;
    
    if (videoId) {
        // Faz uma requisição POST para adicionar o vídeo
        fetch(`/thoughts/addVideo/${id}/${directories[index].name}/${videoId}`, {
            method: 'POST',
        })
        .then(response => {
            if (response.success) {
                alert('Vídeo adicionado com sucesso!');
                window.location.reload();  // Recarrega a página após o sucesso
            } else {
                alert('Erro ao adicionar o vídeo.');
            }
        })
        .catch(error => {
            console.error('Erro ao adicionar o vídeo:', error);
            alert('Ocorreu um erro ao tentar adicionar o vídeo.');
        });
    } else {
        alert('URL do YouTube inválida!');
    }
}



// Função para adicionar um link externo
function addExternalLink(index, directories) {
    const linkUrl = document.getElementById(`link-url-${index}`).value;
    const linkName = prompt('Insira o nome para o link:');
    const id = document.getElementById('identity').textContent;
    if (linkUrl && index !== -1) {
       fetch(`/thoughts/addLink/${id}/${encodeURIComponent(directories[index].name)}/${encodeURIComponent(linkUrl)}/${encodeURIComponent(linkName)}`, {
    method: 'POST',
})


        .then(response => {
            if (response.ok) {
                alert('Link adicionado com sucesso!');
                window.location.reload();  // Recarrega a página após o sucesso
            } else {
                alert('Erro ao adicionar o vídeo.');
            }
        })
        .catch(error => {
            console.error('Erro ao adicionar o Link:', error);
            alert('Ocorreu um erro ao tentar adicionar o vídeo.');
        });
    } else {
        alert('URL inválida!');
    }
}

// Função para extrair o ID do vídeo do YouTube
function extractYouTubeVideoId(url) {
    const regex = /(?:https?:\/\/)?(?:www\.)?youtube\.com\/(?:watch\?v=|embed\/|v\/|.+?v=)?([^&]+)/;
    const match = url.match(regex);
    return match ? match[1] : null;
}

function deleteFile(categoria,dirName,filePath){

const id = document.getElementById('identity').textContent; 
console.log(`/thoughts/deleteFile/${id}/${dirName}/${filePath}/${categoria}`)
  fetch(`/thoughts/deleteFile/${id}/${dirName}/${filePath}/${categoria}`, {
    method: 'DELETE',
})
.then(response => response.json())
.then(data => {
    if (data.success) {
        alert('Arquivo deletado com sucesso!');
        window.location.reload();  // Atualiza a página após o sucesso
    } else {
        alert(data.message);
    }
})
.catch(error => {
    console.error('Erro ao deletar o arquivo:', error);
    alert('Ocorreu um erro ao tentar deletar o arquivo.');
});

}

function deleteDir(dirName){

const id = document.getElementById('identity').textContent; 
console.log(`/thoughts/deleteDir/${id}/${dirName}`)
  fetch(`/thoughts/deleteDir/${id}/${dirName}`, {
    method: 'DELETE',
})
.then(response => response.json())
.then(data => {
    if (data.success) {
        alert('Diretório deletado com sucesso!');
        window.location.reload();  // Atualiza a página após o sucesso
    } else {
        alert(data.message);
    }
})
.catch(error => {
    console.error('Erro ao deletar o diretório:', error);
    alert('Ocorreu um erro ao tentar deletar o diretório.');
});

}

        // Inicializa os diretórios
       // renderDirectories(directories);
    // Função para mostrar/esconder o formulário
    function toggleForm() {
        const form = document.getElementById('myForm');
        if (form.style.display === 'none' || form.style.display === '') {
            form.style.display = 'block'; // Mostra o formulário
        } else {
            form.style.display = 'none'; // Esconde o formulário
        }
    }

    function toggleForm2() {
        const form = document.getElementById('avalForm');
        if (form.style.display === 'none' || form.style.display === '') {
            form.style.display = 'block'; // Mostra o formulário
        } else {
            form.style.display = 'none'; // Esconde o formulário
        }
    }

  function toggleForm3() {
        const form = document.getElementById('eventoForm');
        if (form.style.display === 'none' || form.style.display === '') {
            form.style.display = 'block'; // Mostra o formulário
        } else {
            form.style.display = 'none'; // Esconde o formulário
        }
    }

    function toggleForm4() {
        const form = document.getElementById('pastaForm');
        if (form.style.display === 'none' || form.style.display === '') {
            form.style.display = 'block'; // Mostra o formulário
        } else {
            form.style.display = 'none'; // Esconde o formulário
        }
    }

    async function loadServicos(avaliador,avaliado){
    const servico = document.getElementById('servico');
    const selectedservico = servico.options[servico.selectedIndex].text;
    const servicos = await fetch(`/loadServicos/${avaliador}/${avaliado}`);
    const response = await servicos.text();
    servico.innerHTML = response;
    }

      async function loadEnderecos(id){
    const endereco = document.getElementById('endereco');
    const selectedEndereco = endereco.options[endereco.selectedIndex].text;
    const enderecos = await fetch(`/loadEnderecos/${id}`);
    const response = await enderecos.text();
    endereco.innerHTML = response;
    }

</script>

<style>
  .fileCard {
            width: 200px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin: 10px;
            padding: 10px;
            display: inline-block;
            cursor: pointer;
            text-align: center;
            background-color: aquamarine;
        }
        .card:hover {
            background-color: lightblue;
        }
        .file-upload {
            margin-top: 10px;
        }
        .file-list, .video-container, .link-container {
            margin-top: 10px;
        }
        iframe {
            width: 100%;
            height: 150px;
        }
        .modal {
    display: none; /* Inicialmente escondido */
    position: absolute; /* Para se sobrepor ao conteúdo */
    background-color: white;
    border: 1px solid #ccc;
    padding: 10px;
    z-index: 100; /* Certifique-se de que ele esteja acima de outros elementos */
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
}

        .modal h3{

            color: yellow
        }
 
</style>